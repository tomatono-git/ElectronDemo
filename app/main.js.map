{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/main/MainProcess.ts","webpack:///./src/ts/main/main.ts","webpack:///external \"electron\"","webpack:///external \"os\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ts/main/main.ts\");\n","// import * as fs from \"fs\";\r\nimport { app, BrowserWindow, globalShortcut, GlobalShortcut } from \"electron\";\r\nimport * as path from \"path\";\r\nimport * as os from \"os\";\r\n\r\nconst APPLICATION_NAME = 'app-name';\r\nconst TITLE = 'Sample App';\r\n// const indexPath = `file://${path.join(__dirname, 'index.html')}`;\r\nexport class MainProcess {\r\n\r\n    private mainWindow: BrowserWindow | null;\r\n\r\n    constructor() {\r\n        this.mainWindow = null;\r\n    }\r\n\r\n    public start(): void {\r\n\r\n        app.setName(APPLICATION_NAME);\r\n\r\n        // app.on('window-all-closed', () => { app.quit() })\r\n        // 全てのウィンドウが閉じたら終了\r\n        app.on(\"window-all-closed\", () => {\r\n            if (process.platform != \"darwin\") {\r\n                app.quit();\r\n            }\r\n        });\r\n\r\n        // Electronの初期化完了後に実行\r\n        app.on(\"ready\", () => {\r\n            //ウィンドウサイズを1280*720（フレームサイズを含まない）に設定する\r\n            this.mainWindow = new BrowserWindow({\r\n                title: TITLE,\r\n                width: 1280,\r\n                height: 720,\r\n                useContentSize: true,\r\n                show: false,\r\n                webPreferences: {\r\n                    nodeIntegration: true,\r\n                    defaultEncoding: 'UTF-8'\r\n                }\r\n            });\r\n\r\n            this.mainWindow.webContents.openDevTools();\r\n\r\n            //使用するhtmlファイルを指定する\r\n            // let indexPath = `file://${path.join(__dirname, 'index.html')}`;\r\n            // let indexPath = `file://${path.normalize(path.join(__dirname, 'index.html'))}`;\r\n            let indexPath = path.normalize(path.join('./', 'index.html'));\r\n            // let indexPath = `file://${path.join('../', 'index.html')}`;\r\n            console.log(\"indexPath=%s\", indexPath);\r\n            this.mainWindow.loadURL(indexPath);\r\n\r\n            // Enable keyboard shortcuts for Developer Tools on various platforms.\r\n            let platform = os.platform();\r\n            if (platform === 'darwin') {\r\n                globalShortcut.register('Command+Option+I', () => {\r\n                    if (!this.mainWindow) {\r\n                        return;\r\n                    }\r\n                    this.mainWindow.webContents.openDevTools();\r\n                });\r\n            } else if (platform === 'linux' || platform === 'win32') {\r\n                globalShortcut.register('Control+Shift+I', () => {\r\n                    if (!this.mainWindow) {\r\n                        return;\r\n                    }\r\n                    this.mainWindow.webContents.openDevTools();\r\n                });\r\n            };\r\n\r\n            this.mainWindow.once('ready-to-show', () => {\r\n                if (!this.mainWindow) {\r\n                    return;\r\n                }\r\n                // mainWindow.setMenu(null);\r\n                this.mainWindow.show();\r\n            });\r\n\r\n            // mainWindow.onbeforeunload = (e) => {\r\n            //     // Prevent Command-R from unloading the window contents.\r\n            //     e.returnValue = false;\r\n            // };\r\n\r\n            // ウィンドウが閉じられたらアプリも終了\r\n            this.mainWindow.on(\"closed\", () => {\r\n                this.mainWindow = null;\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","import { MainProcess } from \"./MainProcess\"\r\n\r\nconsole.log(\"__dirname=%s\", __dirname);\r\n\r\nlet main = new MainProcess();\r\nmain.start();\r\n","module.exports = require(\"electron\");","module.exports = require(\"os\");","module.exports = require(\"path\");"],"sourceRoot":""}