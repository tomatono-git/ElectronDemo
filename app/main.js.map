{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/main/MainProcess.ts","webpack:///external \"electron\"","webpack:///external \"os\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;ACnEA,eAAe;;AAKf,mEAA8E;AAE9E,+CAAyB;AACzB,gCAAgC;AAChC,4BAA4B;AAE5B,kDAAkD;AAClD,+DAA+D;AAC/D,yBAAyB;AACzB,4BAA4B;AAE5B,kBAAkB;AAClB,gDAAgD;AAChD,4CAA4C;AAE5C,qCAAqC;AACrC,0BAA0B;AAC1B,2BAA2B;AAC3B,IAAI,IAAI,GAAG,UAAU,CAAC;AACtB,cAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAElB,IAAI,KAAK,GAAG,YAAY,CAAC;AAEzB,4BAA4B;AAC5B,IAAI,UAAU,GAAyB,IAAI,CAAC;AAE5C,oDAAoD;AACpD,kBAAkB;AAClB,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC7B,IAAI,OAAO,CAAC,QAAQ,IAAI,QAAQ,EAAE;QAC9B,cAAG,CAAC,IAAI,EAAE,CAAC;KACd;AACL,CAAC,CAAC,CAAC;AAGH,qBAAqB;AACrB,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;IACjB,sCAAsC;IACtC,UAAU,GAAG,IAAI,wBAAa,CAAC;QAC3B,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,IAAI;QACX,MAAM,EAAE,GAAG;QACX,cAAc,EAAE,IAAI;QACpB,IAAI,EAAE,KAAK;QACX,cAAc,EAAE;YACZ,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,OAAO;SAC3B;KACJ,CAAC,CAAC;IAEH,UAAU,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAEtC,mBAAmB;IACnB,IAAI,QAAQ,GAAG,UAAU,SAAS,aAAa,CAAC;IAChD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IACrC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAE7B,sEAAsE;IACtE,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;IAC7B,IAAI,QAAQ,KAAK,QAAQ,EAAE;QACvB,yBAAc,CAAC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC7C,IAAI,CAAC,UAAU,EAAE;gBACb,OAAO;aACV;YACD,UAAU,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;KACN;SAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,OAAO,EAAE;QACrD,yBAAc,CAAC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;YAC5C,IAAI,CAAC,UAAU,EAAE;gBACb,OAAO;aACV;YACD,UAAU,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;KACN;IAAA,CAAC;IAEF,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;QAClC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,4BAA4B;QAC5B,UAAU,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,uCAAuC;IACvC,+DAA+D;IAC/D,6BAA6B;IAC7B,KAAK;IAEL,qBAAqB;IACrB,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QACzB,UAAU,GAAG,IAAI,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAIH,eAAe;AAEf,uCAAuC;AACvC,2BAA2B;AAC3B,iDAAiD;AACjD,2BAA2B;AAC3B,+BAA+B;AAC/B,+DAA+D;AAC/D,+CAA+C;AAE/C,kCAAkC;AAClC,wBAAwB;AACxB,gCAAgC;AAChC,uCAAuC;AACvC,wCAAwC;AACxC,qCAAqC;AACrC,uBAAuB;AACvB,4BAA4B;AAC5B,qCAAqC;AACrC,uCAAuC;AACvC,YAAY;AACZ,SAAS;AAET,gEAAgE;AAEhE,6EAA6E;AAC7E,oCAAoC;AACpC,mCAAmC;AACnC,8DAA8D;AAC9D,qDAAqD;AACrD,cAAc;AACd,iEAAiE;AACjE,6DAA6D;AAC7D,qDAAqD;AACrD,cAAc;AACd,SAAS;AAET,+CAA+C;AAC/C,oCAAoC;AACpC,6BAA6B;AAC7B,UAAU;AAEV,2CAA2C;AAC3C,mEAAmE;AACnE,iCAAiC;AACjC,SAAS;AAET,4CAA4C;AAC5C,6BAA6B;AAC7B,UAAU;AACV,KAAK;AAEL,uDAAuD;AACvD,qBAAqB;AACrB,sCAAsC;AACtC,0CAA0C;AAC1C,sBAAsB;AACtB,QAAQ;AACR,MAAM;;;;;;;;;;;;;AC/JN,qC;;;;;;;;;;;ACAA,+B","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ts/main/MainProcess.ts\");\n","// \"use strct\";\r\n\r\n// Electronのモジュール\r\n// const electron = require(\"electron\");\r\nimport * as fs from \"fs\";\r\nimport { app, BrowserWindow, globalShortcut, GlobalShortcut } from \"electron\";\r\nimport * as path from \"path\";\r\nimport * as os from \"os\";\r\n// const path = require('path');\r\n// const os = require('os');\r\n\r\n// const globalShortcut = electron.globalShortcut;\r\n// const config = require(path.join(__dirname, 'package.json'))\r\n// アプリケーションをコントロールするモジュール\r\n// const app = electron.app;\r\n\r\n// ウィンドウを作成するモジュール\r\n// const BrowserWindow = electron.BrowserWindow;\r\n// import { BrowserWindow } from \"electron\";\r\n\r\n// // app.setName(config.productName)\r\n// let name = config.mame;\r\n// let title = config.mame;\r\nlet name = 'app-name';\r\napp.setName(name);\r\n\r\nlet title = 'Sample App';\r\n\r\n// メインウィンドウはGCされないようにグローバル宣言\r\nlet mainWindow: BrowserWindow | null = null;\r\n\r\n// app.on('window-all-closed', () => { app.quit() })\r\n// 全てのウィンドウが閉じたら終了\r\napp.on(\"window-all-closed\", () => {\r\n    if (process.platform != \"darwin\") {\r\n        app.quit();\r\n    }\r\n});\r\n\r\n\r\n// Electronの初期化完了後に実行\r\napp.on(\"ready\", () => {\r\n    //ウィンドウサイズを1280*720（フレームサイズを含まない）に設定する\r\n    mainWindow = new BrowserWindow({\r\n        title: title,\r\n        width: 1280,\r\n        height: 720,\r\n        useContentSize: true,\r\n        show: false,\r\n        webPreferences: {\r\n            nodeIntegration: true,\r\n            defaultEncoding: 'UTF-8'\r\n        }\r\n    });\r\n\r\n    mainWindow.webContents.openDevTools();\r\n\r\n    //使用するhtmlファイルを指定する\r\n    let htmlPath = `file://${__dirname}/index.html`;\r\n    console.log(\"htmlPath=%s\", htmlPath);\r\n    mainWindow.loadURL(htmlPath);\r\n\r\n    // Enable keyboard shortcuts for Developer Tools on various platforms.\r\n    let platform = os.platform();\r\n    if (platform === 'darwin') {\r\n        globalShortcut.register('Command+Option+I', () => {\r\n            if (!mainWindow) {\r\n                return;\r\n            }\r\n            mainWindow.webContents.openDevTools();\r\n        });\r\n    } else if (platform === 'linux' || platform === 'win32') {\r\n        globalShortcut.register('Control+Shift+I', () => {\r\n            if (!mainWindow) {\r\n                return;\r\n            }\r\n            mainWindow.webContents.openDevTools();\r\n        });\r\n    };\r\n\r\n    mainWindow.once('ready-to-show', () => {\r\n        if (!mainWindow) {\r\n            return;\r\n        }\r\n        // mainWindow.setMenu(null);\r\n        mainWindow.show();\r\n    });\r\n\r\n    // mainWindow.onbeforeunload = (e) => {\r\n    //     // Prevent Command-R from unloading the window contents.\r\n    //     e.returnValue = false;\r\n    // };\r\n\r\n    // ウィンドウが閉じられたらアプリも終了\r\n    mainWindow.on(\"closed\", () => {\r\n        mainWindow = null;\r\n    });\r\n});\r\n\r\n\r\n\r\n// 'use strict'\r\n\r\n// const electron = require('electron')\r\n// const app = electron.app\r\n// const globalShortcut = electron.globalShortcut\r\n// const os = require('os')\r\n// const path = require('path')\r\n// const config = require(path.join(__dirname, 'package.json'))\r\n// const BrowserWindow = electron.BrowserWindow\r\n\r\n// app.setName(config.productName)\r\n// var mainWindow = null\r\n// app.on('ready', function () {\r\n//     mainWindow = new BrowserWindow({\r\n//         backgroundColor: 'lightgray',\r\n//         title: config.productName,\r\n//         show: false,\r\n//         webPreferences: {\r\n//             nodeIntegration: true,\r\n//             defaultEncoding: 'UTF-8'\r\n//         }\r\n//     })\r\n\r\n//     mainWindow.loadURL(`file://${__dirname}/app/index.html`);\r\n\r\n//     // Enable keyboard shortcuts for Developer Tools on various platforms.\r\n//     let platform = os.platform();\r\n//     if (platform === 'darwin') {\r\n//         globalShortcut.register('Command+Option+I', () => {\r\n//             mainWindow.webContents.openDevTools();\r\n//         });\r\n//     } else if (platform === 'linux' || platform === 'win32') {\r\n//         globalShortcut.register('Control+Shift+I', () => {\r\n//             mainWindow.webContents.openDevTools();\r\n//         });\r\n//     };\r\n\r\n//     mainWindow.once('ready-to-show', () => {\r\n//         mainWindow.setMenu(null);\r\n//         mainWindow.show();\r\n//     });\r\n\r\n//     mainWindow.onbeforeunload = (e) => {\r\n//         // Prevent Command-R from unloading the window contents.\r\n//         e.returnValue = false;\r\n//     };\r\n\r\n//     mainWindow.on('closed', function () {\r\n//         mainWindow = null;\r\n//     });\r\n// })\r\n\r\n// // app.on('window-all-closed', () => { app.quit() })\r\n// // 全てのウィンドウが閉じたら終了\r\n// app.on(\"window-all-closed\", () => {\r\n//     if (process.platform != \"darwin\") {\r\n//         app.quit();\r\n//     }\r\n// });\r\n","module.exports = require(\"electron\");","module.exports = require(\"os\");"],"sourceRoot":""}